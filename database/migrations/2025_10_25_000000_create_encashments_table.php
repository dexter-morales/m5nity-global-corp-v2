<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    /**
     * Run the migrations.
     */
    public function up(): void
    {
        Schema::create('encashments', function (Blueprint $table) {
            $table->id();
            $table->foreignId('member_id')->constrained('members_info')->onDelete('cascade');
            $table->foreignId('member_account_id')->nullable()->constrained('members_account')->onDelete('set null');
            $table->string('encashment_no')->unique(); // Auto-generated encashment number
            $table->decimal('amount', 15, 2);
            $table->enum('status', [
                'pending',
                'approved',
                'processed',
                'released',
                'rejected',
                'cancelled',
            ])->default('pending');
            $table->text('member_notes')->nullable(); // Member's notes when requesting
            $table->text('admin_notes')->nullable(); // Admin's notes when approving/rejecting
            $table->text('accounting_notes')->nullable(); // Accounting's notes when processing
            $table->text('cashier_notes')->nullable(); // Cashier's notes when releasing

            // Approval tracking
            $table->foreignId('approved_by')->nullable()->constrained('users')->onDelete('set null');
            $table->timestamp('approved_at')->nullable();

            // Processing tracking
            $table->foreignId('processed_by')->nullable()->constrained('users')->onDelete('set null');
            $table->timestamp('processed_at')->nullable();
            $table->string('voucher_no')->nullable()->unique(); // Generated by accounting
            $table->enum('payment_type', ['voucher', 'cheque', 'bank_transfer'])->nullable();

            // Release tracking
            $table->foreignId('released_by')->nullable()->constrained('users')->onDelete('set null');
            $table->timestamp('released_at')->nullable();
            $table->foreignId('received_by')->nullable()->constrained('users')->onDelete('set null'); // Member who received
            $table->timestamp('received_at')->nullable();

            // Rejection tracking
            $table->foreignId('rejected_by')->nullable()->constrained('users')->onDelete('set null');
            $table->timestamp('rejected_at')->nullable();
            $table->text('rejection_reason')->nullable();

            $table->timestamps();
            $table->softDeletes(); // For archival purposes

            // Indexes for better query performance
            $table->index('status');
            $table->index('member_id');
            $table->index('encashment_no');
            $table->index('voucher_no');
            $table->index('created_at');
        });
    }

    /**
     * Reverse the migrations.
     */
    public function down(): void
    {
        Schema::dropIfExists('encashments');
    }
};
